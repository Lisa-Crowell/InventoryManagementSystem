@page "/addinventory"

@inject NavigationManager NavigationManager
@inject IAddInventory _AddInventory

@attribute [Authorize(Policy = "Inventory")]

<h3>Add Inventory</h3>
<br/>
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group">
        <label for="name">Inventory Name</label>
        <InputText 
            id="name" 
            @bind-Value="inventory.InventoryName"
            class="form-control">
        </InputText>
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber 
            id="quantity" 
            @bind-Value="inventory.Quantity"
            class="form-control">
        </InputNumber>
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber 
            id="price" 
            @bind-Value="inventory.Price"
            class="form-control">
        </InputNumber>
    </div>
    <br/>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private Inventory inventory = new Inventory();

    private async Task SaveInventory()
    {
        await _AddInventory.ExecuteAsync(inventory);
        NavigationManager.NavigateTo("/inventory");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/inventory");
    }

    private NavigationManager _navigationManager;
    private IAddInventory _addInventory;
}